name = "jaki-club-worker"
compatibility_date = "2024-05-01"
compatibility_flags = [ "nodejs_compat" ]
main = "src/Worker.ts"

workers_dev = false
send_metrics = false

rules = [
  { type = "Text", globs = ["**/*.sql"], fallthrough = true }
]

[env.dev]
name = "jakiclub"
vars = { IS_PROD = "", BUILD_TARGET="dev" }
route = { pattern = "www.jaki.club/*", zone_name = "jaki.club" }

[env.prod]
name = "jakiclub"
vars = { IS_PROD = "YES", BUILD_TARGET="prod" }
route = { pattern = "www.jaki.club/*", zone_name = "jaki.club" }
d1_databases = [
  { binding = "LOGIN_CODE_DB", database_name = "jakiclub-db", database_id = "d37462ed-2790-4bb4-96ed-f259d0bafb6d" }
]

[env.stage]
name = "da99stream"
vars = { IS_PROD = "YES", IS_STAGE = "yes", BUILD_TARGET="stage" }
route = { pattern = "www.da99.stream", custom_domain = true }
d1_databases = [
 { binding = "LOGIN_CODE_DB", database_name = "da99stream-db", database_id = "e02b16ce-03ac-4788-a404-0673df782b2a" }
]


# Variable bindings. These are arbitrary, plaintext strings (similar to environment variables)
# Note: Use secrets to store sensitive data.
# Docs: https://developers.cloudflare.com/workers/platform/environment-variables
# [vars]
# MY_VARIABLE = "production_value"

# Bind a KV Namespace. Use KV as persistent storage for small key-value pairs.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/kv
# [[kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Bind an R2 Bucket. Use R2 to store arbitrarily large blobs of data, such as files.
# Docs: https://developers.cloudflare.com/r2/api/workers/workers-api-usage/
# [[r2_buckets]]
# binding = "MY_BUCKET"
# bucket_name = "my-bucket"

# Bind a Queue producer. Use this binding to schedule an arbitrary task that may be processed later by a Queue consumer.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.producers]]
# binding = "MY_QUEUE"
# queue = "my-queue"

# Bind a Queue consumer. Queue Consumers can retrieve tasks scheduled by Producers to act on them.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.consumers]]
# queue = "my-queue"

# Bind another Worker service. Use this binding to call another Worker without network overhead.
# Docs: https://developers.cloudflare.com/workers/platform/services
# [[services]]
# binding = "MY_SERVICE"
# service = "/api/*"

# Bind a Durable Object. Durable objects are a scale-to-zero compute primitive based on the actor model.
# Durable Objects can live for as long as needed. Use these when you need a long-running "server", such as in realtime apps.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/durable-objects
# [[durable_objects.bindings]]
# name = "MY_DURABLE_OBJECT"
# class_name = "MyDurableObject"

# Durable Object migrations.
# Docs: https://developers.cloudflare.com/workers/learning/using-durable-objects#configure-durable-object-classes-with-migrations
# [[migrations]]
# tag = "v1"
# new_classes = ["MyDurableObject"]
