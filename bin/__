#!/usr/bin/env bash
#
#
set -u -e -o pipefail

case "$*" in
  "-h"|"--help"|"help")
    echo "$0 -h|--help|help -- Show this message."
    echo "$0 serve dev|static"
    echo "$0 setup db"
    echo "$0 build dev|prod"
    echo "$0 build watch"
    echo "$0 build dir"
    echo "$0 section new [SECTION-NAME]"
    echo "$0 upload"
    echo "$0 upgrade"
    echo "$0 prune files"
    echo "$0 deploy prod|dev"
    echo
    ;;

  "deploy prod"|"deploy dev"|"deploy prod "*|"deploy dev "*|"deploy the_stage"|"deploy the_stage "*)
    shift
    target="$1"
    shift
    set -x
    bun x wrangler deploy --env "$target" "$@"
    ;;

  "serve static")
    settings="$(cat settings.json)"
    static_port="$(echo "$settings" | jq --raw-output .STATIC_PORT)"
    static_dir="$(echo "$settings" | jq --raw-output .STATIC_DIR)"
    build_dir="$(echo "$settings" | jq --raw-output .BUILD_DIR)"
    set -x
    www serve "$static_port" "$build_dir"/"$static_dir" "$0" build dev
    ;;

  "serve dev")
    shift; shift
    # bunx wrangler dev
    # IS_DEV='YES' secrets JAKI_DEV bun run --hot src/worker.js
    dev_port="$(jq --raw-output .DEV_PORT < settings.json)"
    set -x
    bun x wrangler dev --env dev --port "$dev_port" "$@"
    ;;

  "build watch")
    content=""
    while read -r LINE ; do
      echo "--- $LINE"
      filename="$(echo "$LINE" | cut -d' ' -f3-)"
      dir="$(echo "$LINE" | cut -d' ' -f1)"
      file="$dir$filename"
      case "$file" in
        *.css|*.html|*.js)
          new_content="$(cat "$file")"
          if ! test "$new_content" == "$content" ; then
            echo "--- $file"
            "$0" build
            content="$new_content"
          else
            echo "skipping: $file"
          fi
          ;;
      esac
    done < <(inotifywait -r -m -e MODIFY public)
    ;;

  "build")
    "$0" build "${BUILD_TARGET:-prod}"
    ;;

  "build dir")
    set -x
    cd "$(dirname "$0")"/..
    rm -rf build
    cp -r public build
    ;;

  "build dev")
    echo "--- Building for development..." >&2
    BUILD_TARGET="dev" "$0" __build
    ;;

  "build prod")
    echo "--- Building for production..." >&2
    BUILD_TARGET="prod" "$0" __build
    ;;

  __build)
    this_bin="$(realpath "$0")"
    cd "$(dirname "$0")"/..

    echo "--- in $PWD" >&2
    "$this_bin" build dir
    # "$this_bin" download pure.css

    www update raw file manifest

    cd build

    echo "=== Building css"
    www build css

    echo "=== Building .mjs scripts"
    www build mjs

    echo "=== Building html"
    www build html

    cd ..

    echo "=== Updating file manifest..."
    www update file manifest

    case "$BUILD_TARGET" in
      dev)
        rm -f public_files.json
        ln -s tmp/public_files.json public_files.json
        ;;
      prod)
        echo "{}" > public_files.json
        ;;
    esac

    echo "=== Done building. ===" >&2
    echo
    ;;

  "download pure.css")
    set -x
    cd public/styles
    wget -O pure.css "https://cdn.jsdelivr.net/npm/purecss@3.0.0/build/base-min.css"
    wget -O pure-grids.css "https://cdn.jsdelivr.net/npm/purecss@3.0.0/build/grids-responsive-min.css"
    wget -O reset.css "https://meyerweb.com/eric/tools/css/reset/reset.css"
    ;;

  "section new "*)
    new_name="$3"

    new_dir=public/section/"$new_name"
    mkdir -p "$new_dir"
    for x in index.html index.mts index.css ; do
      if ! test -f "$new_dir"/"$x" ; then
        cp templates/"$x" "$new_dir"/"$x"
      fi
    done
    tree "$new_dir"
    ;;

  "upload")
    www setup bucket
    www write file manifest
    www upload to bucket
    ;;

  upgrade)
    bun update
    "$0" download pure.css
    ;;

  "prune files")
    set -x
    secrets JAKI_DEV www "$@"
    ;;

  "setup db")
    set -x
    npx wrangler d1 execute login-code-db --env dev --local --file=./d1/setup.sql
    ;;

  *)
    echo "!!! Unknown command: $*" >&2
    exit 1
    ;;
esac
