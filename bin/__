#!/usr/bin/env bash
#
#
set -u -e -o pipefail

case "$*" in
  # doc: CMD -h|--help|help -- Show this message.
  "-h"|"--help"|"help")
    CMD=__ da_doc "$0"
    ;;

  # doc: CMD setup
  setup)
    bun install --save-dev \
      lightningcss \
      wrangler \
      @cloudflare/workers-types \
      @types/bun \
      hono hono-sessions
    ;;

  # doc: CMD upgrade
  upgrade)
    bun update
    ;;

  # doc: CMD build
  build)
    this_bin="$(realpath "$0")"
    cd "$(dirname "$0")"/..
    echo "--- in $PWD" >&2

    (
      cd public/section/base
      www_static download pure.css
    )

    www_static build dir

    site_name="$( jq .SITE_NAME build/settings.json )"
    echo
    echo "--- Building for: ${site_name} ---" >&2

    www_static build

    echo
    echo -e "\e[1;32m====== Done building: ${site_name} ======\e[0m" >&2
    echo
    ;;

  # doc: CMD section new [SECTION-NAME]
  "section new "*)
    for x in index.html.mts index.mts index.css ; do
      YEAR="$(date +%Y)" NAME="$3" SECTION="$3" www_static template templates/"$x" "public/section/$3"
    done
    ;;

  # doc: CMD stage db setup|drop|inspect|prune
  "stage db setup")
    set -x
    bun x wrangler d1 execute db-stage --env stage --local  --file=./d1/setup.sql
    bun x wrangler d1 execute db-stage --env stage --remote --file=./d1/setup.sql
    ;;

  "stage db drop")
    set -x
    for x in local remote ; do
      bun x wrangler d1 execute db-stage --env stage --"$x" --command="DROP TABLE IF EXISTS email;"
      bun x wrangler d1 execute db-stage --env stage --"$x" --command="DROP TABLE IF EXISTS login_codes;"
      bun x wrangler d1 execute db-stage --env stage --"$x" --command="DROP TABLE IF EXISTS sessions;"
    done
    ;;

  "stage db inspect")
    set -x
    for table in email login_codes ; do
      bun x wrangler d1 execute db-stage --env stage --remote --command="SELECT * FROM $table;"
    done
    ;;

  "stage db prune")
    set -x
    now_ts="$(date +%s)"
    time_limit="$(( 20 * 60 ))"
    bun x wrangler d1 execute db-stage --env stage --remote --command="DELETE FROM login_codes WHERE login_codes.date_created < '$(( now_ts - time_limit ))' ;"
    ;;

  # doc: CMD stage tail
  "stage tail")
    set -x
    bun x wrangler tail -e stage
    ;;
  # =============================================================================
  # =============================================================================

  # =============================================================================
  # doc: CMD dev db setup|drop|reset|inspect
  "dev db setup")
    set -x
    npx wrangler d1 execute login-code-db --env dev --local --file=./d1/setup.sql
    ;;

  "dev db drop")
    set -x
    npx wrangler d1 execute login-code-db --env dev --local --command="DROP TABLE IF EXISTS email;"
    npx wrangler d1 execute login-code-db --env dev --local --command="DROP TABLE IF EXISTS login_codes;"
    npx wrangler d1 execute login-code-db --env dev --local --command="DROP TABLE IF EXISTS sessions;"
    ;;

  "dev db reset")
    set -x
    "$0" db drop
    "$0" db setup
    ;;

  "dev db inspect")
    set -x
    npx wrangler d1 execute login-code-db --env dev --local --command="SELECT * from email;"
    npx wrangler d1 execute login-code-db --env dev --local --command="SELECT * from login_codes;"
    npx wrangler d1 execute login-code-db --env dev --local --command="SELECT * from sessions;"
    ;;

  # =============================================================================

  *)
    echo "!!! Unknown command: $*" >&2
    exit 1
    ;;
esac
